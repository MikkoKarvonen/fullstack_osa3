{"version":3,"sources":["components/Persons.js","components/Filter.js","components/Notification.js","components/PersonForm.js","services/persons.js","App.js","serviceWorker.js","index.js"],"names":["Persons","props","react_default","a","createElement","persons","map","person","i","name","toLowerCase","includes","search","key","id","number","onClick","remove","Filter","value","onChange","change","Notification","className","style","message","PersonForm","onSubmit","addPerson","newName","nameChange","newNumber","numChange","type","baseUrl","services_persons","axios","get","newObject","post","delete","concat","put","App","_useState","useState","_useState2","Object","slicedToArray","setPersons","_useState3","_useState4","setNewName","_useState5","_useState6","setNewNumber","_useState7","_useState8","newSearch","setNewSearch","_useState9","_useState10","setMessage","_useState11","_useState12","setStyle","useEffect","personService","then","response","data","changeMessage","msg","setTimeout","components_Notification","components_Filter","event","target","components_PersonForm","preventDefault","some","e","window","confirm","newId","find","filter","alert","components_Persons","personToDelete","p","catch","error","bind","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4ea07c2f.chunk.js","sourcesContent":["import React from 'react'\n\nconst Persons = (props) => {\n    return (\n        <div>\n            {props.persons.map((person,i) => (\n                person.name.toLowerCase().includes(\n                    props.search.toLowerCase())) ? \n                    <p key={person.id}>{person.name} {person.number} <button onClick={() => props.remove(person.id)}>poista</button></p> : ''\n            )}\n        </div>\n    )\n}\n\nexport default Persons","import React from 'react'\n\nconst Filter = (props) => {\n    return (\n        <div>\n            rajaa näytettäviä <input value={props.search} onChange={props.change} />\n        </div>\n    )\n}\n\nexport default Filter","import React from 'react'\n\nconst Notification = (props) => {\n    return (\n        <div className={props.style}>\n            {props.message}\n        </div>\n    )\n}\n\nexport default Notification","import React from 'react'\n\nconst PersonForm = (props) => {\n    return (\n        <form onSubmit={props.addPerson}>\n            <div>\n                nimi: <input value={props.newName}\n                    onChange={props.nameChange} />\n            </div>\n            <div>\n                numero: <input value={props.newNumber}\n                    onChange={props.numChange} />\n            </div>\n            <div>\n                <button type=\"submit\">lisää</button>\n            </div>\n        </form>\n    )\n}\n\nexport default PersonForm","import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n  return axios.get(baseUrl)\n}\n\nconst create = newObject => {\n  return axios.post(baseUrl, newObject)\n}\n\nconst remove = newObject => {\n    return axios.delete(`${baseUrl}/${newObject}`)\n}\n\nconst update = newObject => {\n    return axios.put(`${baseUrl}/${newObject.id}`, newObject)\n}\n\nexport default { \n  getAll: getAll, \n  create: create,\n  remove: remove,\n  update: update\n}","import React, { useState, useEffect } from 'react'\nimport Persons from './components/Persons'\nimport Filter from './components/Filter'\nimport Notification from './components/Notification'\nimport PersonForm from './components/PersonForm'\nimport personService from './services/persons'\nimport './App.css'\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [newSearch, setNewSearch] = useState('')\n  const [message, setMessage] = useState('')\n  const [style, setStyle] = useState('')\n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then(response => {\n        setPersons(response.data)\n      })\n  }, [])\n\n  const addPerson = (event) => {\n    event.preventDefault()\n    if (persons.some(e => e.name === newName)) {\n      const updatePerson = window.confirm(`${newName} on jo luettelossa. Korvataanko vanha numero uudella?`);\n      if (updatePerson){\n        const newId = persons.find(e => e.name === newName).id\n        const person = {id: newId,  name: newName, number: newNumber}\n        personService\n        .update(person)\n        .then(response => {\n          setPersons(persons.filter((i)=> i.id!==newId).concat(response.data));\n          changeMessage(`${newName} numero vaihdettiin.`, `change`);\n        })\n      }\n    } else if (persons.some(e => e.number === newNumber)) {\n      alert(`Numero ${newNumber} on jo luettelossa.`);\n    } else {\n      const person = { name: newName, number: newNumber}\n      personService\n        .create(person)\n        .then(response => {\n          setPersons(persons.concat(response.data))\n          changeMessage(`${person.name} lisättiin.`, `add`);\n        })\n    }\n    setNewName('')\n    setNewNumber('')\n  }\n\n  const removePerson = (e) => {\n    const personToDelete = persons.find(p => p.id === e).name\n    const deletePerson = window.confirm(`Poistetaanko ${personToDelete}?`);\n    if (deletePerson){\n    personService\n      .remove(e)\n      .then(response => {\n        setPersons(persons.filter((i)=> i.id!==e));\n        changeMessage(`${personToDelete} poistettiin.`, `remove`);\n      })\n      .catch(error => {\n        setPersons(persons.filter((i)=> i.id!==e));\n        changeMessage(`${personToDelete} oli jo poistettu.`, `remove`);\n      })\n    }\n  }\n\n  const changeMessage = (msg, style) => {\n    setMessage(msg)\n    setStyle(style)\n    setTimeout(() => {\n      setMessage(null)\n      setStyle(null)\n    }, 5000)\n  }\n\n  const handlePersonChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleSearchChange = (event) => {\n    setNewSearch(event.target.value)\n  }\n\n  return (\n    <div>\n      <h2>Puhelinluettelo</h2>\n      <Notification message={message} style={style}/>\n      <Filter search={newSearch} change={handleSearchChange}/>\n      <h3>Lisää uusi</h3>\n      \n      <PersonForm \n        addPerson={addPerson} newName={newName} nameChange={handlePersonChange} newNumber={newNumber} numChange={handleNumberChange}\n      />\n      <h2>Numerot</h2>\n      <Persons persons={persons} search={newSearch} remove={removePerson.bind(this)}/>\n    </div>\n  )\n}\n\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}